!function(){"use strict";var e={d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{h:function(){return M},Z:function(){return $}});var t={formSelector:".form",inputSelector:".form__item",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__item_type_error",errorClass:"form__input-error_visible"},n="#card-template";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n,r){var o=t.data,i=t.handleCardClick,a=t.handleRemoveVerify,u=t.handleAddCardLike,s=t.handleRemoveCardLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=o.name,this._link=o.link,this._likes=o.likes,this._id=o._id,this._ownerId=o.owner._id,this._templateSelector=n,this._handleCardClick=i,this._handleRemoveVerify=a,this._handleAddCardLike=u,this._handleRemoveCardLike=s,this._userInfo=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_handleOpenImagePreview",value:function(e){var t=e.name,n=e.link;this._handleCardClick({name:t,link:n})}},{key:"activateLikeButton",value:function(e){this._likeButton.classList.add("card__like-btn_active"),this._likeCount.textContent=e.likes.length}},{key:"deactivateLikeButton",value:function(e){this._likeButton.classList.remove("card__like-btn_active"),this._likeCount.textContent=e.likes.length}},{key:"updateCardLikes",value:function(e){this._likes=e.likes}},{key:"_isDisplayRemoveButton",value:function(e){e._id===this._ownerId&&this._removeButton.classList.add("card__remove-btn_visible")}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"_isUserLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userInfo._id}))}},{key:"_setEventListeners",value:function(){var e=this;this._image.addEventListener("click",(function(){e._handleOpenImagePreview({name:e._name,link:e._link})})),this._likeButton.addEventListener("click",(function(){e._isUserLiked()?e._handleRemoveCardLike(e._id):e._handleAddCardLike(e._id)})),this._removeButton.addEventListener("click",(function(){e._handleRemoveVerify(e._id)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._image=this._element.querySelector(".card__image"),this._title=this._element.querySelector(".card__title"),this._likeCount=this._element.querySelector(".card__like-count"),this._likeButton=this._element.querySelector(".card__like-btn"),this._removeButton=this._element.querySelector(".card__remove-btn"),this._setEventListeners(),this._isDisplayRemoveButton(this._userInfo),this._isUserLiked()&&this._likeButton.classList.add("card__like-btn_active"),this._image.style.backgroundImage="url(".concat(this._link,")"),this._title.textContent=this._name,this._likeCount.textContent=this._likes.length,this._element}}])&&r(t.prototype,n),e}(),i=function(e,t,n,r){var i=new o({data:e,handleCardClick:function(e){t.open(e)},handleRemoveVerify:function(e){$.open(),$.setRemoveVerifySubmitAction((function(){$.renderLoading(!0,"Deleting..."),M.removeCard(e).then((function(){return i.removeCard()})).then((function(){return $.close()})).catch((function(e){console.log(e)})).finally((function(){return $.renderLoading(!1)}))}))},handleAddCardLike:function(e){M.addCardLike(e).then((function(e){i.activateLikeButton(e),i.updateCardLikes(e)})).catch((function(e){console.log(e)}))},handleRemoveCardLike:function(e){M.removeCardLike(e).then((function(e){i.deactivateLikeButton(e),i.updateCardLikes(e)})).catch((function(e){console.log(e)}))}},n,r);return i};function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(err.status," ").concat(err.statusText))}},{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._handleResponse)}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(this._handleResponse)}},{key:"setProfileAvatar",value:function(e){var t=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleResponse)}},{key:"setUserProfileInfo",value:function(e){var t=e.name,n=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._handleResponse)}},{key:"addNewCard",value:function(e){var t=e.name,n=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._handleResponse)}},{key:"removeCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addCardLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"removeCardLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}])&&a(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));n.classList.add(this._errorClass),n.textContent=t,e.classList.add(this._inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.classList.remove(this._errorClass),t.textContent="",e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._disableSubmitButton()}}])&&s(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){e.preventDefault(),"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("modal")&&e.close()})),this._popupElement.querySelector(".modal__close-btn").addEventListener("click",(function(){e.close()}))}}])&&c(t.prototype,n),e}();function h(e){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==h(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e,t){var n,r=e.handleFormSubmit,o=e.resetFormValidation;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._formElement=n._popupElement.querySelector(".form"),n._formSubmitButton=n._popupElement.querySelector(".form__button"),n._handleFormSubmit=r,n._resetFormValidation=o,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._formElement.querySelectorAll(".form__item"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;_(v(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"renderLoading",value:function(e,t,n){this._formSubmitButton.textContent=e?n:t}},{key:"close",value:function(){_(v(a.prototype),"close",this).call(this),this._resetFormValidation(),this._formElement.reset()}}])&&d(t.prototype,n),a}(f);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popupElement.querySelector(".modal__image"),t._caption=t._popupElement.querySelector(".modal__image-caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;g(C(a.prototype),"open",this).call(this),this._image.src=n,this._image.alt=t,this._caption.textContent=t}}])&&k(t.prototype,n),a}(f);function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return(R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._formElement=t._popupElement.querySelector(".form"),t._formSubmitButton=t._popupElement.querySelector(".form__button"),t}return t=a,(n=[{key:"setRemoveVerifySubmitAction",value:function(e){this._handleVerifySubmit=e}},{key:"renderLoading",value:function(e,t){this._formSubmitButton.textContent=e?t:"Yes"}},{key:"setEventListeners",value:function(){var e=this;R(B(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleVerifySubmit()}))}}])&&O(t.prototype,n),a}(f);function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addDefaultItem",value:function(e){this._container.append(e)}},{key:"addNewItem",value:function(e){this._container.prepend(e)}}])&&q(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.profileNameSelector,r=t.profileSubtitleSelector,o=t.profileAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileUserName=document.querySelector(n),this._profileSubtitle=document.querySelector(r),this._profileAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInfo={},this._userInfo.name=this._profileUserName.textContent,this._userInfo.about=this._profileSubtitle.textContent,this._userInfo}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._profileUserName.textContent=t,this._profileSubtitle.textContent=n}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._profileAvatar.style.backgroundImage="url(".concat(t,")")}}])&&V(t.prototype,n),e}(),A=document.querySelector(".form_type_profile-info"),x=document.querySelector(".profile__button_type_edit"),D=document.querySelector(".profile__button_type_avatar"),N=document.querySelector(".form_type_avatar-info"),F=document.querySelector(".form_type_new-card-info"),J=document.querySelector(".profile__button_type_add"),H=document.querySelector(".form__item_el_name"),z=document.querySelector(".form__item_el_subtitle"),M=new u({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"222743ec-a19f-43d0-bb9f-85b170c2da6b","Content-Type":"application/json"}}),Y=new l(t,A),Z=new l(t,F),G=new l(t,N);Y.enableValidation(),Z.enableValidation(),G.enableValidation();var K=new T({profileNameSelector:".profile__title-name",profileSubtitleSelector:".profile__subtitle",profileAvatarSelector:".profile__avatar-picture"}),Q=new y({handleFormSubmit:function(e){Q.renderLoading(!0,"Save","Saving..."),M.setUserProfileInfo(e).then((function(e){K.setUserInfo(e)})).then((function(){return Q.close()})).catch((function(e){console.log("Error: ".concat(e.status," ").concat(e.statusText))})).finally((function(){Q.renderLoading(!1,"Save")}))},resetFormValidation:function(){Y.resetValidation()}},".modal_type_edit-profile");Q.setEventListeners(),x.addEventListener("click",(function(){Q.open();var e=K.getUserInfo();H.value=e.name,z.value=e.about}));var W=new y({handleFormSubmit:function(e){W.renderLoading(!0,"Save","Saving..."),M.setProfileAvatar(e).then((function(e){K.setUserAvatar(e)})).then((function(){return W.close()})).catch((function(e){console.log(e)})).finally((function(){W.renderLoading(!1,"Save")}))},resetFormValidation:function(){G.resetValidation()}},".modal_type_change-avatar");W.setEventListeners(),D.addEventListener("click",(function(){W.open()})),M.getUserInfo().then((function(e){var t=e;return K.setUserInfo(t),K.setUserAvatar(t),t})).then((function(e){M.getInitialCards().then((function(t){var r=new U({items:t,renderer:function(t){var o=i(t,X,n,e);r.addDefaultItem(o.generateCard())}},".cards__list");r.renderItems();var o=new y({handleFormSubmit:function(t){o.renderLoading(!0,"Create","Creating..."),M.addNewCard(t).then((function(t){var o=i(t,X,n,e);r.addNewItem(o.generateCard())})).then((function(){return o.close()})).catch((function(e){console.log(e)})).finally((function(){o.renderLoading(!1,"Create")}))},resetFormValidation:function(){Z.resetValidation()}},".modal_type_add-card");o.setEventListeners(),J.addEventListener("click",(function(){o.open()}))})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)}));var X=new L(".modal_type_image-detail");X.setEventListeners();var $=new j(".modal_type_remove-verify");$.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,